@model Garage2.Models.Vehicle

@{
    ViewBag.Title = "Edit";
}
<div class="container tablebackground">
	<h2>Edit</h2>


	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal ">

			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Id)

			<div class="form-group">
				@Html.LabelFor(model => model.Reg, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Reg, new
					{
						htmlAttributes = new
						{
							@class = "form-control"@*, @ReadOnly = "true"*@}
					})
					@Html.ValidationMessageFor(model => model.Reg, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EnumDropDownListFor(model => model.Brand, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.CheckIn, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.CheckIn, new { htmlAttributes = new { @class = "form-control", @ReadOnly = "true" } })
					@Html.ValidationMessageFor(model => model.CheckIn, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EnumDropDownListFor(model => model.Color, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Wheels, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EnumDropDownListFor(model => model.Wheels, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.Wheels, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					@Html.ActionLink("Back to Parked Vehicles", "Index") |  <input type="submit" value="Save" class="btn btn-success" />
				</div>
			</div>
		</div>
	}
	<br/>
	</div>
	@section Scripts {
		@Scripts.Render("~/bundles/jqueryval")
	}
